{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import axios from'axios';// Create Auth Context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// Auth Provider Component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Load user details from token on app load\nuseEffect(()=>{const fetchUser=async()=>{const token=localStorage.getItem('token');if(token){try{const{data}=await axios.get('/api/user/me',{headers:{Authorization:`Bearer ${token}`}});setUser(data.user);}catch(error){console.error('Error fetching user data:',error);localStorage.removeItem('token');setUser(null);}}setLoading(false);};fetchUser();},[]);// Login user and store token\nconst login=async credentials=>{const{data}=await axios.post('/api/auth/login',credentials);localStorage.setItem('token',data.token);setUser(data.user);};// Register new user\nconst register=async credentials=>{const{data}=await axios.post('/api/auth/register',credentials);localStorage.setItem('token',data.token);setUser(data.user);};// Logout user and clear session\nconst logout=()=>{localStorage.removeItem('token');setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,register,logout,loading},children:children});};// Custom Hook to use Auth Context\nexport const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","fetchUser","token","localStorage","getItem","data","get","headers","Authorization","error","console","removeItem","login","credentials","post","setItem","register","logout","Provider","value","useAuth"],"sources":["D:/Development Projects/resume-builder/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create Auth Context\r\nconst AuthContext = createContext();\r\n\r\n// Auth Provider Component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Load user details from token on app load\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const { data } = await axios.get('/api/user/me', {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          setUser(data.user);\r\n        } catch (error) {\r\n          console.error('Error fetching user data:', error);\r\n          localStorage.removeItem('token');\r\n          setUser(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchUser();\r\n  }, []);\r\n\r\n  // Login user and store token\r\n  const login = async (credentials) => {\r\n    const { data } = await axios.post('/api/auth/login', credentials);\r\n    localStorage.setItem('token', data.token);\r\n    setUser(data.user);\r\n  };\r\n\r\n  // Register new user\r\n  const register = async (credentials) => {\r\n    const { data } = await axios.post('/api/auth/register', credentials);\r\n    localStorage.setItem('token', data.token);\r\n    setUser(data.user);\r\n  };\r\n\r\n  // Logout user and clear session\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom Hook to use Auth Context\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAC7E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC;AACA,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAE5C;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACT,GAAI,CACF,KAAM,CAAEG,IAAK,CAAC,CAAG,KAAM,CAAAf,KAAK,CAACgB,GAAG,CAAC,cAAc,CAAE,CAC/CC,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAUN,KAAK,EAAG,CAC9C,CAAC,CAAC,CACFJ,OAAO,CAACO,IAAI,CAACR,IAAI,CAAC,CACpB,CAAE,MAAOY,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjDN,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CAChCb,OAAO,CAAC,IAAI,CAAC,CACf,CACF,CACAE,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAEDC,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAW,KAAK,CAAG,KAAO,CAAAC,WAAW,EAAK,CACnC,KAAM,CAAER,IAAK,CAAC,CAAG,KAAM,CAAAf,KAAK,CAACwB,IAAI,CAAC,iBAAiB,CAAED,WAAW,CAAC,CACjEV,YAAY,CAACY,OAAO,CAAC,OAAO,CAAEV,IAAI,CAACH,KAAK,CAAC,CACzCJ,OAAO,CAACO,IAAI,CAACR,IAAI,CAAC,CACpB,CAAC,CAED;AACA,KAAM,CAAAmB,QAAQ,CAAG,KAAO,CAAAH,WAAW,EAAK,CACtC,KAAM,CAAER,IAAK,CAAC,CAAG,KAAM,CAAAf,KAAK,CAACwB,IAAI,CAAC,oBAAoB,CAAED,WAAW,CAAC,CACpEV,YAAY,CAACY,OAAO,CAAC,OAAO,CAAEV,IAAI,CAACH,KAAK,CAAC,CACzCJ,OAAO,CAACO,IAAI,CAACR,IAAI,CAAC,CACpB,CAAC,CAED;AACA,KAAM,CAAAoB,MAAM,CAAGA,CAAA,GAAM,CACnBd,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CAChCb,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAACyB,QAAQ,EAACC,KAAK,CAAE,CAAEtB,IAAI,CAAEe,KAAK,CAAEI,QAAQ,CAAEC,MAAM,CAAElB,OAAQ,CAAE,CAAAH,QAAA,CACrEA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED;AACA,MAAO,MAAM,CAAAwB,OAAO,CAAGA,CAAA,GAAM/B,UAAU,CAACI,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}